@startuml

component "test-support" as TestSupport

note bottom of TestSupport
    Generic test utilities
end note

component "kdsl-client" as KDSLClient

note right of KDSLClient
    Generic HTTP client used
    by Ontrack. Mostly a wrapper
    around the Spring REST template.
end note

component "kdsl-core" as KDSLCore

KDSLCore ..> KDSLClient : api

note right of KDSLCore
    Root level of KDSL client
    classes. The connector and
    the way to build it.
    Other KDSL classes are extensions
    (in the Kotlin sense) of those
    classes.
end note

component "kdsl-model" as KDSLModel

KDSLModel ..> KDSLCore : api

note right of KDSLModel
    Main KDSL classes, based on the
    core model for Ontrack (projects,
    properties, etc.).
end note

component "bdd-model" as BDDModel

BDDModel .right.> KDSLModel : api
BDDModel .down.> TestSupport

note bottom of BDDModel
    BDD steps for Ontrack
end note

component "kdsl-test" as KDSLTest <<app>>

note bottom of KDSLTest
    KDSL integration tests
end note

KDSLTest .up.> KDSLModel
KDSLTest .left.> TestSupport

package "ontrack-extension-xxx" {

    component "src/main" as ExtensionJAR

    note top of ExtensionJAR
        This contains the server-side
        code of the extension. This is published
        as a JAR file consumed by the Ontrack
        application.
    end note

    component "src/dsl" as ExtensionDSL

    ExtensionDSL ..> KDSLModel : api

    note top of ExtensionDSL
        This contains the DSL-side (client side)
        code of the extension. This is published
        as a JAR file consumed by the _clients_
        and provides extensions to the KDSL main
        modules.
    end note

    component "src/bdd" as ExtensionBDD

    note top of ExtensionBDD
        This contains the BDD steps and definitions
        to be used by general tests.

        It can consume the extension DSL
    end note

    ExtensionBDD .right.> ExtensionDSL : api
    ExtensionBDD .down.> BDDModel

}

component "bdd-engine" as BDDEngine

note bottom of BDDEngine
    Main BDD runner, used
    by a BDD application
end note

component "bdd-definitions" as BDDDefinitions

BDDDefinitions .right.> BDDModel : api

note bottom of BDDDefinitions
    Exports definitions for
    being used by
    external extensions.
end note

component "bdd" as BDDAcceptance <<app>>

note top of BDDAcceptance
    Main E2E tests of Ontrack,
    testing the core
    application and all
     the core extensions.

    Packaged as an application.
end note

BDDAcceptance .down.> BDDDefinitions
BDDAcceptance .left.> BDDEngine
BDDAcceptance .right.> ExtensionBDD

@enduml