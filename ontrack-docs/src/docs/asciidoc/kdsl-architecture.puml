@startuml

actor Client
note left of Client
    Any remote client
    of Ontrack
end note

component "kdsl-connector" as Connector <<jar>>
note right of Connector
    HTTP layer for connecting to
    a remote Ontrack instance
end note

component "kdsl-spec" as Spec <<api>>
note bottom of Spec
    Transport-independent specification
    for the Ontrack KDSL
end note

component "kdsl-internal" as Direct <<jar>>
note top of Direct
    Implementation of the KDSL
    to be used internally in Ontrack,
    accessing the services directly
end note

component "kdsl-http" as HTTP <<jar>>
note top of HTTP
    Implementation of the KDSL
    based on a HTTP connector
end note

component "model" as Model <<core>>
note bottom of Model
    Ontrack core model
    and services
end note

component "rest/graphql" as UI <<core>>
note bottom of UI
    Ontrack UI end points
    (REST & GraphQL)
end note

component "kdsl-client-spec" as ClientSpec <<api>>
note right of ClientSpec
    Specification of an Ontrack
    client (KDSL but also more
    direct functions)
end note

component "kdsl-client-ui" as ClientUI <<jar>>
note top of ClientUI
    Controller using a client
    implementation, either based
    on HTTP or direct service access.
end note

component "kdsl-client-cli" as ClientCLI <<app>>
note top of ClientCLI
    CLI using a HTTP-based KDSL
end note

HTTP --|> Spec
HTTP --> Connector
Connector ..> UI: maps to

Direct --|> Spec
Direct --> Model

ClientUI --|> ClientSpec
ClientUI --> Direct

ClientCLI --|> ClientSpec
ClientCLI --|> HTTP

Client ..> ClientCLI
Client ..> ClientUI

@enduml
